{"ast":null,"code":"import { of } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class DataService {\n  getPosts() {\n    return this.httpclient.get(`${this.apiUrl}/posts`);\n  }\n  constructor(httpclient) {\n    this.httpclient = httpclient;\n    this.apiUrl = 'https://jsonplaceholder.typicode.com';\n    this.poster = 'http://localhost:3000/poster';\n    this.insertSheet = 'http://localhost:3000/insererbrouillon';\n    this.sheetList = \"http://localhost:3000/afficherbrouillon\";\n    this.supprimer = \"http://localhost:3000/supprimerBrouillon\";\n    this.postBrouillon = \"http://localhost:3000/posterBrouillon\";\n    this.afficherEvent = \"http://localhost:3000/afficherEvent\";\n  }\n  //INSERER UN BROUILLON\n  insert(formData) {\n    console.log(\"envoi du brouillon en cours : \\n\");\n    let data = new FormData();\n    data.append('nom', formData.nom);\n    data.append('description', formData.description);\n    data.append('date', formData.date.toString());\n    if (formData.image) {\n      data.append('image', formData.image);\n      console.log(\"au final :  \\n\" + formData);\n      return this.httpclient.post(this.insertSheet, data);\n    } else {\n      console.log(\"aucun fichier\");\n      return of(\"rien\");\n    }\n  }\n  //FAIRE UN POST\n  makePost(formData) {\n    console.log(\"envoi du post en cours : \\n\");\n    let data = new FormData();\n    data.append('nom', formData.nom);\n    data.append('description', formData.description);\n    data.append('date', formData.date.toString());\n    if (formData.image) {\n      data.append('image', formData.image);\n      console.log(\"au final :  \\n\");\n      console.log(data);\n      return this.httpclient.post(this.poster, data);\n    } else {\n      console.log(\"aucun fichier\");\n      return of(\"rien\");\n    }\n  }\n  //LISTE DES BROUILLONS\n  list() {\n    return this.httpclient.get(this.sheetList);\n  }\n  //SUPPRIMER UN BROUILLON\n  deleteSheet(element) {\n    console.log(\"donnees a envoyer : \\n\");\n    console.log(element);\n    return this.httpclient.post(this.supprimer, element);\n  }\n  //POSTER UN BROUILLON\n  postDraft(element) {\n    return this.httpclient.post(this.postBrouillon, element);\n  }\n  //AFICHER LES POSTS\n  displayPost() {\n    return this.httpclient.get(this.afficherEvent);\n  }\n  static #_ = this.ɵfac = function DataService_Factory(t) {\n    return new (t || DataService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: DataService,\n    factory: DataService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["of","DataService","getPosts","httpclient","get","apiUrl","constructor","poster","insertSheet","sheetList","supprimer","postBrouillon","afficherEvent","insert","formData","console","log","data","FormData","append","nom","description","date","toString","image","post","makePost","list","deleteSheet","element","postDraft","displayPost","_","i0","ɵɵinject","i1","HttpClient","_2","factory","ɵfac","providedIn"],"sources":["/home/antonio/Bureau/zarahay-portfolio/portfolio/src/app/component/data.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { dataToSend } from '../dataToSend.model';\r\nimport { receivedData } from './admin/receivedData.model';\r\n\r\n@Injectable({\r\n  providedIn: 'root',\r\n})\r\nexport class DataService {\r\n  private apiUrl = 'https://jsonplaceholder.typicode.com';\r\n  poster : string = 'http://localhost:3000/poster';\r\n  insertSheet: string= 'http://localhost:3000/insererbrouillon';\r\n  sheetList : string = \"http://localhost:3000/afficherbrouillon\";\r\n  supprimer : string = \"http://localhost:3000/supprimerBrouillon\";\r\n  postBrouillon : string = \"http://localhost:3000/posterBrouillon\";\r\n  afficherEvent : string = \"http://localhost:3000/afficherEvent\"\r\n\r\n\r\n  getPosts(): Observable<any[]> {\r\n    return this.httpclient.get<any[]>(`${this.apiUrl}/posts`);\r\n  }\r\n\r\n  constructor(private httpclient : HttpClient) { }\r\n  \r\n    //INSERER UN BROUILLON\r\n    insert(formData: dataToSend):Observable<any> { \r\n      console.log(\"envoi du brouillon en cours : \\n\" )\r\n       let data = new FormData()\r\n   \r\n       \r\n       data .append('nom' , formData.nom)\r\n       data.append('description' , formData.description)\r\n       data.append('date' , formData.date.toString());\r\n   \r\n       if (formData.image){\r\n         data.append('image' , formData.image)\r\n\r\n         console.log(\"au final :  \\n\" + formData )\r\n         return this.httpclient.post(this.insertSheet , data )\r\n       }\r\n       \r\n       else {\r\n         console.log(\"aucun fichier\")\r\n         return of (\"rien\")\r\n       }\r\n     }\r\n\r\n\r\n       //FAIRE UN POST\r\n  makePost(formData: dataToSend):Observable<any> { \r\n    console.log(\"envoi du post en cours : \\n\" )\r\n    let data = new FormData()\r\n\r\n    data .append('nom' , formData.nom);\r\n    data.append('description' , formData.description);\r\n    data.append('date' , formData.date.toString());\r\n    \r\n    if (formData.image){\r\n      data.append('image' , formData.image)\r\n      console.log(\"au final :  \\n\")\r\n      console.log(data)\r\n      return this.httpclient.post(this.poster , data )\r\n    }\r\n    \r\n    else {\r\n      console.log(\"aucun fichier\")\r\n      return of (\"rien\")\r\n    }\r\n  }\r\n\r\n   //LISTE DES BROUILLONS\r\n list():Observable<any> { \r\n  return this.httpclient.get(this.sheetList)\r\n}\r\n\r\n  //SUPPRIMER UN BROUILLON\r\n  deleteSheet(element : receivedData):Observable<any>{\r\n    console.log(\"donnees a envoyer : \\n\")\r\n    console.log(element)\r\n  return this.httpclient.post(this.supprimer,element)\r\n  }\r\n\r\n//POSTER UN BROUILLON\r\n  postDraft(element : receivedData): Observable<any>{\r\n    return this.httpclient.post(this.postBrouillon , element)\r\n  }\r\n  \r\n  //AFICHER LES POSTS\r\n  displayPost():Observable<any>{\r\n    return this.httpclient.get(this.afficherEvent)\r\n  }\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}